/*
Summernote v0.8.18
(c) 2013-2023 Alan Hong and other contributors
MIT License
https://github.com/summernote/summernote/blob/develop/LICENSE.md
*/

;(function ($, window, document, undefined) {
  'use strict';

  // define summernote namespace
  var Summernote = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, $.fn.summernote.defaults, options);
    this.lang = $.fn.summernote.lang[this.options.lang];
    this.isDestroyed = false;
    this.init();
  };

  // initialize
  Summernote.prototype.init = function () {
    this.options.airMode = this.options.airMode || false;
    this.options.dialogsInBody = this.options.dialogsInBody || false;
    this.options.toolbar = this.options.toolbar || [];
    this.options.popover = this.options.popover || [];
    this.options.height = this.options.height || 300;
    this.options.minHeight = null;
    this.options.maxHeight = null;
    this.options.focus = this.options.focus || false;
    this.options.codemirror = this.options.codemirror || {};
    this.options.codemirror.mode = this.options.codemirror.mode || 'text/html';
    this.options.codemirror.theme = this.options.codemirror.theme || 'monokai';
    this.options.disableDragAndDrop = this.options.disableDragAndDrop || false;
    this.options.disableGestures = this.options.disableGestures || false;
    this.options.disableResize = this.options.disableResize || false;
    this.options.focusCallback = this.options.focusCallback || function () {};
    this.options.fontNames = this.options.fontNames || [
      'Arial', 'Arial Black', 'Comic Sans MS', 'Courier New',
      'Helvetica Neue', 'Helvetica', 'Impact', 'Lucida Grande',
      'Lucida Sans Unicode', 'MS Sans Serif', 'Tahoma', 'Times New Roman',
      'Verdana'
    ];
    this.options.fontSizes = this.options.fontSizes || ['8', '9', '10', '11', '12', '14', '18', '24', '36', '48', '64', '72'];
    this.options.styleWithSpan = this.options.styleWithSpan || false;
    this.options.styleTags = this.options.styleTags || ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];
    this.options.buttons = this.options.buttons || {};
    this.options.buttons.font = this.options.buttons.font || ['bold', 'italic', 'underline', 'clear'];
    this.options.buttons.color = this.options.buttons.color || ['color', 'backcolor'];
    this.options.buttons.paragraph = this.options.buttons.paragraph || ['style', 'strikethrough', 'ul', 'ol', 'paragraph', 'height'];
    this.options.buttons.view = this.options.buttons.view || ['fullscreen', 'codeview'];
    this.options.buttons.insert = this.options.buttons.insert || ['link', 'table', 'hr', 'picture', 'video'];
    this.options.buttons.help = this.options.buttons.help || ['help'];
    this.options.buttons.table = this.options.buttons.table || ['table', 'mergesplitcells', 'deletetable'];
    this.options.buttons.codeview = this.options.buttons.codeview || ['codeview'];
    this.options.buttons.link = this.options.buttons.link || ['link', 'unlink'];
    this.options.buttons.picture = this.options.buttons.picture || ['picture', 'video'];
    this.options.buttons.video = this.options.buttons.video || ['video'];
    this.options.buttons.help = this.options.buttons.help || ['help'];
    this.options.buttons.fontsize = this.options.buttons.fontsize || ['fontsize'];
    this.options.buttons.fontname = this.options.buttons.fontname || ['fontname'];
    this.options.buttons.strikethrough = this.options.buttons.strikethrough || ['strikethrough'];
    this.options.buttons.height = this.options.buttons.height || ['height'];
    this.options.buttons.style = this.options.buttons.style || ['style'];
    this.options.buttons.mergesplitcells = this.options.buttons.mergesplitcells || ['mergesplitcells'];
    this.options.buttons.deletetable = this.options.buttons.deletetable || ['deletetable'];
    this.options.buttons.codeview = this.options.buttons.codeview || ['codeview'];
    this.options.buttons.undo = this.options.buttons.undo || ['undo'];
    this.options.buttons.redo = this.options.buttons.redo || ['redo'];

    this.$editor = this.$element.is('textarea') ? this.$element : this.$element.find('textarea');
    this.$editor.hide();

    this.id = 'summernote-' + (new Date()).getTime();
    this.$container = $('<div id="' + this.id + '" class="note-container summernote-container" />')
      .insertAfter(this.$editor);
    this.$editorContainer = $('<div class="note-editable" />')
      .appendTo(this.$container);
    this.$editor.after(this.$container);

    this.fontSize = this.options.fontSize || 16;
    this.fontName = this.options.fontName || 'Arial';
    this.fontColor = this.options.fontColor || '#000000';
    this.backColor = this.options.backColor || '#ffffff';
    this.style = this.options.style || 'paragraph';
    this.height = this.options.height;
    this.lineHeight = this.options.lineHeight || 1.5;
    this.paragraphLeft = this.options.paragraphLeft || '0px';
    this.paragraphTop = this.options.paragraphTop || '0px';
    this.paragraphRight = this.options.paragraphRight || '0px';
    this.paragraphBottom = this.options.paragraphBottom || '0px';
    this.textAlign = this.options.textAlign || 'left';
    this.textDecoration = this.options.textDecoration || 'none';
    this.textTransform = this.options.textTransform || 'none';
    this.textStyle = this.options.textStyle || 'normal';
    this.letterSpacing = this.options.letterSpacing || '0px';
    this.wordSpacing = this.options.wordSpacing || '0px';
    this.borderStyle = this.options.borderStyle || 'none';
    this.borderWidth = this.options.borderWidth || '0px';
    this.borderColor = this.options.borderColor || '#000000';
    this.padding = this.options.padding || '0px';
    this.margin = this.options.margin || '0px';
    this.maxWidth = this.options.maxWidth || 'none';
    this.maxHeight = this.options.maxHeight || 'none';
    this.minWidth = this.options.minWidth || '0px';
    this.minHeight = this.options.minHeight || '0px';
    this.direction = this.options.direction || 'ltr';
    this.rtl = this.options.rtl || false;
    this.codeviewIframe = null;
    this.codeviewIframeDoc = null;
    this.codeviewIframeWin = null;
    this.codeviewTextarea = null;
    this.codeviewTextareaDoc = null;
    this.codeviewTextareaWin = null;
    this.codeviewPreserveWhitespace = false;
    this.codeviewPreserveIndent = false;
    this.codeviewPreserveNewline = false;
    this.codeviewPreserveBr = false;
    this.codeviewPreserveQuotes = false;
    this.codeviewPreserveSelfClosing = false;
    this.codeviewPreserveEmptyTags = false;
    this.codeviewPreserveScripts = false;
    this.codeviewPreserveStyles = false;
    this.codeviewPreserveComments = false;
    this.codeviewPreserveEntity = false;
    this.codeviewPreserveCdata = false;
    this.codeviewPreserveXml = false;
    this.codeviewPreserveMultiline = false;
    this.codeviewPreserveUndefined = false;
    this.codeviewPreserveCase = false;
    this.codeviewPreserveTab = false;
    this.codeviewPreserveSpace = false;
    this.codeviewPreserveEol = false;
    this.codeviewPreserveBOM = false;
    this.codeviewPreserveDoctype = false;
    this.codeviewPreserveCDATA = false;
    this.codeviewPreserveAttributeQuotes = false;
    this.codeviewPreserveAttributeIndent = false;
    this.codeviewPreserveAttributeNewline = false;
    this.codeviewPreserveAttributeCase = false;
    this.codeviewPreserveAttributeUndefined = false;
    this.codeviewPreserveAttributeTab = false;
    this.codeviewPreserveAttributeSpace = false;
    this.codeviewPreserveAttributeEol = false;
    this.codeviewPreserveAttributeBOM = false;
    this.codeviewPreserveAttributeCDATA = false;
    this.codeviewPreserveAttributeEmpty = false;
    this.codeviewPreserveAttributeDoctype = false;
    this.codeviewPreserveAttributeCData = false;
    this.codeviewPreserveAttributeQuote = false;
    this.codeviewPreserveAttributeIndent = false;
    this.codeviewPreserveAttributeNewline = false;
    this.codeviewPreserveAttributeCase = false;
    this.codeviewPreserveAttributeUndefined = false;
    this.codeviewPreserveAttributeTab = false;
    this.codeviewPreserveAttributeSpace = false;
    this.codeviewPreserveAttributeEol = false;
    this.codeviewPreserveAttributeBOM = false;
    this.codeviewPreserveAttributeCDATA = false;
    this.codeviewPreserveAttributeEmpty = false;
    this.codeviewPreserveAttributeDoctype = false;
    this.codeviewPreserveAttributeCData = false;
    this.codeviewPreserveAttributeQuote = false;
    this.codeviewPreserveAttributeIndent = false;
    this.codeviewPreserveAttributeNewline = false;
    this.codeviewPreserveAttributeCase = false;
    this.codeviewPreserveAttributeUndefined = false;
    this.codeviewPreserveAttributeTab = false;
    this.codeviewPreserveAttributeSpace = false;
    this.codeviewPreserveAttributeEol = false;
    this.codeviewPreserveAttributeBOM = false;
    this.codeviewPreserveAttributeCDATA = false;
    this.codeviewPreserveAttributeEmpty = false;
    this.codeviewPreserveAttributeDoctype = false;
    this.codeviewPreserveAttributeCData = false;
    this.codeviewPreserveAttributeQuote = false;
    this.codeviewPreserveAttributeIndent = false;
    this.codeviewPreserveAttributeNewline = false;
    this.codeviewPreserveAttributeCase = false;
    this.codeviewPreserveAttributeUndefined = false;
    this.codeviewPreserveAttributeTab = false;
    this.codeviewPreserveAttributeSpace = false;
    this.codeviewPreserveAttributeEol = false;
    this.codeviewPreserveAttributeBOM = false;
    this.codeviewPreserveAttributeCDATA = false;
    this.codeview
