/*
Summernote v0.8.18
(c) 2013-2023 Alan Hong and other contributors
MIT License
https://github.com/summernote/summernote/blob/develop/LICENSE.md
*/

;(function ($, window, document, undefined) {
  'use strict';

  // define summernote namespace
  var Summernote = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, $.fn.summernote.defaults, options);
    this.lang = this.options.lang;
    this.isDestroyed = false;
    this.init();
  };

  // initialize
  Summernote.prototype.init = function () {
    this.options.airMode = this.options.airMode && this.$element.parent().hasClass('note-air-frame');
    this.options.dialogsInBody = this.options.dialogsInBody && !this.options.airMode;
    this.options.toolbar = this.options.toolbar && $('<div>').addClass('note-toolbar').append(this.options.toolbar).remove().html();
    this.options.button = this.options.button && $('<button>').addClass('note-btn').append(this.options.button).remove().html();

    this.$editor = this.options.dialogsInBody
      ? $('<div>').addClass('note-editor note-frame-container').appendTo('body')
      : $('<div>').addClass('note-editor').appendTo(this.$element);

    this.$editable = this.options.airMode
      ? $('<div>').addClass('note-editable panel-body').appendTo(this.$editor)
      : $('<textarea>').addClass('note-editable').appendTo(this.$editable);

    this.$editor.append(this.options.toolbar);

    this.$fontname = this.options.fontNames && $('<select>').addClass('note-fontname').appendTo(this.$editor);
    this.$fontsize = this.options.fontSizes && $('<select>').addClass('note-fontsize').appendTo(this.$editor);
    this.$color = this.options.colors && $('<input>').addClass('note-colorpicker').appendTo(this.$editor);
    this.$bold = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-font-weight-button note-bold').appendTo(this.$editor);
    this.$italic = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-font-style-button note-italic').appendTo(this.$editor);
    this.$underline = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-font-decoration-button note-underline').appendTo(this.$editor);
    this.$strikethrough = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-font-decoration-button note-strikethrough').appendTo(this.$editor);
    this.$superscript = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-superscript').appendTo(this.$editor);
    this.$subscript = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-subscript').appendTo(this.$editor);
    this.$paragraph = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-paragraph').appendTo(this.$editor);
    this.$hr = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-horizontal-rule').appendTo(this.$editor);
    this.$link = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-link').appendTo(this.$editor);
    this.$unlink = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-unlink').appendTo(this.$editor);
    this.$image = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-image').appendTo(this.$editor);
    this.$video = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-video').appendTo(this.$editor);
    this.$file = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-file').appendTo(this.$editor);
    this.$table = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-table').appendTo(this.$editor);
    this.$ul = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-unordered-list').appendTo(this.$editor);
    this.$ol = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-ordered-list').appendTo(this.$editor);
    this.$redo = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-redo').appendTo(this.$editor);
    this.$undo = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-undo').appendTo(this.$editor);
    this.$help = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-help').appendTo(this.$editor);
    this.$fullscreen = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-fullscreen').appendTo(this.$editor);
    this.$air = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-air').appendTo(this.$editor);
    this.$maximize = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-maximize').appendTo(this.$editor);
    this.$codeview = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-codeview').appendTo(this.$editor);
    this.$search = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-search').appendTo(this.$editor);
    this.$view = this.options.buttons && $('<button>').addClass('note-btn note-btn-icon note-view').appendTo(this.$editor);

    this.$fontname.append('<option value="">' + this.lang['fontname'] + '</option>');
    this.$fontsize.append('<option value="">' + this.lang['fontsize'] + '</option>');

    this.initEvents();
    this.initLayout();
    this.initPopover();
    this.initFontSize();
    this.initFontName();
    this.initColorPicker();
    this.initLinkDialog();
    this.initImageDialog();
    this.initVideoDialog();
    this.initTableDialog();
    this.initAirMode();
    this.initFullscreenMode();
    this.initCodeviewMode();
    this.initMaximizeMode();
    this.initSearchMode();
    this.initViewMode();
    this.initFontWeight();
    this.initFontStyle();
    this.initFontDecoration();
    this.initListStyle();
    this.initParagraphStyle();
    this.initShortcut();
    this.initUndoManager();
    this.initClipboard();
    this.initDialog();
    this.initButton();
    this.initEditable();
    this.initEventHandlers();
  };

  // initialize events
  Summernote.prototype.initEvents = function () {
    this.$fontname.on('change', $.proxy(this.changeFontName, this));
    this.$fontsize.on('change', $.proxy(this.changeFontSize, this));
    this.$color.on('change', $.proxy(this.changeColor, this));
    this.$editable.on('paste', $.proxy(this.handlePaste, this));
    this.$editable.on('input propertychange', $.proxy(this.change, this));
    this.$editable.on('focus', $.proxy(this.focus, this));
    this.$editable.on('blur', $.proxy(this.blur, this));
    this.$editable.on('scroll', $.proxy(this.scroll, this));
    this.$editable.on('mouseup', $.proxy(this.updateRange, this));
    this.$editable.on('keydown', $.proxy(this.keydown, this));
    this.$editable.on('keyup', $.proxy(this.keyup, this));
    this.$editable.on('mousedown', $.proxy(this.mousedown, this));
    this.$editable.on('mousemove', $.proxy(this.mousemove, this));
    this.$editable.on('mouseleave', $.proxy(this.mouseleave, this));
    this.$editable.on('click', $.proxy(this.click, this));
    this.$editable.on('dblclick', $.proxy(this.dblclick, this));
    this.$editable.on('contextmenu', $.proxy(this.contextmenu, this));
    this.$editable.on('selectstart', $.proxy(this.selectstart, this));
    this.$editable.on('dragstart', $.proxy(this.dragstart, this));
    this.$editable.on('drop', $.proxy(this.drop, this));
    this.$editable.on('dragover', $.proxy(this.dragover, this));
    this.$editable.on('dragleave', $.proxy(this.dragleave, this));
    this.$editable.on('focusin', $.proxy(this.focusin, this));
    this.$editable.on('focusout', $.proxy(this.focusout, this));
    this.$editable.on('cut', $.proxy(this.cut, this));
    this.$editable.on('copy', $.proxy(this.copy, this));
    this.$editable.on('paste', $.proxy(this.paste, this));
    this.$editable.on('beforedeactivate', $.proxy(this.beforedeactivate, this));
    this.$editable.on('focus', $.proxy(this.focus, this));
    this.$editable.on('blur', $.proxy(this.blur, this));
    this.$editable.on('change', $.proxy(this.change, this));
    this.$editable.on('input', $.proxy(this.change, this));
    this.$editable.on('keydown', $.proxy(this.keydown, this));
    this.$editable.on('keyup', $.proxy(this.keyup, this));
    this.$editable.on('mousedown', $.proxy(this.mousedown, this));
    this.$editable.on('mousemove', $.proxy(this.mousemove, this));
    this.$editable.on('mouseleave', $.proxy(this.mouseleave, this));
    this.$editable.on('click', $.proxy(this.click, this));
    this.$editable.on('dblclick', $.proxy(this.dblclick, this));
    this.$editable.on('contextmenu', $.proxy(this.contextmenu, this));
    this.$editable.on('selectstart', $.proxy(this.selectstart, this));
    this.$editable.on('dragstart', $.proxy(this.dragstart, this));
    this.$editable.on('drop', $.proxy(this.drop, this));
    this.$editable.on('dragover', $.proxy(this.dragover, this));
    this.$editable.on('dragleave', $.proxy(this.dragleave, this));
    this.$editable.on('focusin', $.proxy(this.focusin, this));
    this.$editable.on('focusout', $.proxy(this.focusout, this));
    this.$editable.on('cut', $.proxy(this.cut, this));
    this.$editable.on('copy', $.proxy(this.copy, this));
    this.$editable.on('paste', $.proxy(this.paste, this));
    this.$editable.on('beforede
