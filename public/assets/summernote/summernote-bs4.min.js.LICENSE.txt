/*
Summernote v0.8.18
(c) 2013-2023 Alan Hong and other contributors
MIT License
https://github.com/summernote/summernote/blob/develop/LICENSE.md
*/

;(function ($, window, document, undefined) {
  'use strict';

  // define summernote namespace
  var Summernote = function (element, options) {
    this.$element = $(element);
    this.options = $.extend({}, $.fn.summernote.defaults, options);
    this.lang = this.options.lang;
    this.isDestroyed = false;
    this.init();
  };

  // initialize
  Summernote.prototype.init = function () {
    this.options.airMode = this.options.airMode && this.$element.parent().hasClass('note-air-frame');
    this.options.dialogsInBody = this.options.dialogsInBody && !this.options.airMode;
    this.options.toolbar = this.options.toolbar && $('<div/>').addClass('note-toolbar').append(this.options.toolbar).html();
    this.options.button = this.options.button && $('<button/>').addClass('note-btn').append(this.options.button).html();

    this.$editor = this.options.dialogsInBody
      ? $('<div/>').addClass('note-editor note-frame-container').appendTo('body')
      : $('<div/>').addClass('note-editor').appendTo(this.$element);

    this.$editable = this.options.dialogsInBody
      ? $('<div/>').addClass('note-editable').appendTo(this.$editor)
      : this.$element;

    this.$editor.append(this.options.toolbar);
    this.$editor.append(this.options.button);

    this.$fontname = this.$editor.find('.dropdown.note-fontname');
    this.$fontsize = this.$editor.find('.dropdown.note-fontsize');
    this.$color = this.$editor.find('.note-color');
    this.$bold = this.$editor.find('.note-btn.note-btn-bold');
    this.$italic = this.$editor.find('.note-btn.note-btn-italic');
    this.$underline = this.$editor.find('.note-btn.note-btn-underline');
    this.$strikethrough = this.$editor.find('.note-btn.note-btn-strikethrough');
    this.$removeFormat = this.$editor.find('.note-btn.note-btn-remove-format');
    this.$paragraph = this.$editor.find('.note-btn.note-btn-paragraph');
    this.$hr = this.$editor.find('.note-btn.note-btn-hr');
    this.$link = this.$editor.find('.note-btn.note-btn-link');
    this.$unlink = this.$editor.find('.note-btn.note-btn-unlink');
    this.$image = this.$editor.find('.note-btn.note-btn-image');
    this.$video = this.$editor.find('.note-btn.note-btn-video');
    this.$table = this.$editor.find('.note-btn.note-btn-table');
    this.$ul = this.$editor.find('.note-btn.note-btn-ul');
    this.$ol = this.$editor.find('.note-btn.note-btn-ol');
    this.$redo = this.$editor.find('.note-btn.note-btn-redo');
    this.$undo = this.$editor.find('.note-btn.note-btn-undo');
    this.$help = this.$editor.find('.note-btn.note-btn-help');
    this.$fullscreen = this.$editor.find('.note-btn.note-btn-fullscreen');
    this.$air = this.$editor.find('.note-btn.note-btn-air');
    this.$airPalette = this.$editor.find('.note-palette.note-air-palette');
    this.$airPopover = this.$editor.find('.note-popover.note-air-popover');
    this.$airDialog = this.$editor.find('.note-dialog.note-air-dialog');
    this.$airModal = this.$editor.find('.note-modal.note-air-modal');
    this.$airInput = this.$editor.find('.note-air-dialog input');
    this.$airFooter = this.$editor.find('.note-air-dialog .note-footer');
    this.$airFooterBtn = this.$editor.find('.note-air-dialog .note-footer .btn');
    this.$airFooterClose = this.$editor.find('.note-air-dialog .note-footer .note-btn-close');
    this.$airBtn = this.$editor.find('.note-btn.note-air-btn');
    this.$airBtnClose = this.$editor.find('.note-btn.note-air-btn-close');
    this.$airBtnFullscreen = this.$editor.find('.note-btn.note-air-btn-fullscreen');
    this.$airBtnCodeview = this.$editor.find('.note-btn.note-air-btn-codeview');
    this.$airCodeview = this.$editor.find('.note-codeview');
    this.$airCodeviewEditor = this.$editor.find('.note-codeview .CodeMirror');
    this.$airCodeviewPreview = this.$editor.find('.note-codeview .note-codeview-preview');
    this.$airCodeviewFooter = this.$editor.find('.note-codeview .note-footer');
    this.$airCodeviewFooterBtn = this.$editor.find('.note-codeview .note-footer .btn');
    this.$airCodeviewBtn = this.$editor.find('.note-btn.note-air-codeview-btn');
    this.$airCodeviewBtnClose = this.$editor.find('.note-btn.note-air-codeview-btn-close');
    this.$airCodeviewBtnFullscreen = this.$editor.find('.note-btn.note-air-codeview-btn-fullscreen');

    this.$fontname.on('mousedown', $.proxy(this.onFontnameMousedown, this));
    this.$fontsize.on('mousedown', $.proxy(this.onFontsizeMousedown, this));
    this.$color.on('mousedown', $.proxy(this.onColorMousedown, this));
    this.$bold.on('mousedown', $.proxy(this.onBoldMousedown, this));
    this.$italic.on('mousedown', $.proxy(this.onItalicMousedown, this));
    this.$underline.on('mousedown', $.proxy(this.onUnderlineMousedown, this));
    this.$strikethrough.on('mousedown', $.proxy(this.onStrikethroughMousedown, this));
    this.$removeFormat.on('mousedown', $.proxy(this.onRemoveFormatMousedown, this));
    this.$paragraph.on('mousedown', $.proxy(this.onParagraphMousedown, this));
    this.$hr.on('mousedown', $.proxy(this.onHrMousedown, this));
    this.$link.on('mousedown', $.proxy(this.onLinkMousedown, this));
    this.$unlink.on('mousedown', $.proxy(this.onUnlinkMousedown, this));
    this.$image.on('mousedown', $.proxy(this.onImageMousedown, this));
    this.$video.on('mousedown', $.proxy(this.onVideoMousedown, this));
    this.$table.on('mousedown', $.proxy(this.onTableMousedown, this));
    this.$ul.on('mousedown', $.proxy(this.onUlMousedown, this));
    this.$ol.on('mousedown', $.proxy(this.onOlMousedown, this));
    this.$redo.on('mousedown', $.proxy(this.onRedoMousedown, this));
    this.$undo.on('mousedown', $.proxy(this.onUndoMousedown, this));
    this.$help.on('mousedown', $.proxy(this.onHelpMousedown, this));
    this.$fullscreen.on('mousedown', $.proxy(this.onFullscreenMousedown, this));
    this.$air.on('mousedown', $.proxy(this.onAirMousedown, this));
    this.$airBtn.on('mousedown', $.proxy(this.onAirBtnMousedown, this));
    this.$airBtnClose.on('mousedown', $.proxy(this.onAirBtnCloseMousedown, this));
    this.$airBtnFullscreen.on('mousedown', $.proxy(this.onAirBtnFullscreenMousedown, this));
    this.$airBtnCodeview.on('mousedown', $.proxy(this.onAirBtnCodeviewMousedown, this));
    this.$airCodeviewBtn.on('mousedown', $.proxy(this.onAirCodeviewBtnMousedown, this));
    this.$airCodeviewBtnClose.on('mousedown', $.proxy(this.onAirCodeviewBtnCloseMousedown, this));
    this.$airCodeviewBtnFullscreen.on('mousedown', $.proxy(this.onAirCodeviewBtnFullscreenMousedown, this));

    this.$editable.on('focus', $.proxy(this.onFocus, this));
    this.$editable.on('blur', $.proxy(this.onBlur, this));
    this.$editable.on('paste', $.proxy(this.onPaste, this));
    this.$editable.on('input propertychange', $.proxy(this.onInput, this));
    this.$editable.on('scroll', $.proxy(this.onScroll, this));

    this.$editable.on('mouseup', $.proxy(this.onMouseup, this));
    this.$editable.on('mousedown', $.proxy(this.onMousedown, this));
    this.$editable.on('mousemove', $.proxy(this.onMousemove, this));

    this.$editable.on('keydown', $.proxy(this.onKeydown, this));
    this.$editable.on('keyup', $.proxy(this.onKeyup, this));

    this.$editable.on('click', $.proxy(this.onClick, this));
    this.$editable.on('dblclick', $.proxy(this.onDblclick, this));

    this.$editable.on('contextmenu', function (e) {
      e.preventDefault();
    });

    this.$editable.on('drop dragover', function (e) {
      e.preventDefault();
    });

    this.$editable.on('dragenter', $.proxy(this.onDragenter, this));
    this.$editable.on('dragleave', $.proxy(this.onDragleave, this));
    this.$editable.on('drop', $.proxy(this.onDrop, this));

    this.$editable.on('scroll', $.proxy(this.onScroll, this));

    this.$editable.on('focus', $.proxy(this.onFocus, this));
    this.$editable.on('blur', $.proxy(this.onBlur, this));

    this.$editable.on('mousedown', $.proxy(this.onMousedown, this));
    this.$editable.on('mousemove', $.proxy(this.onMousemove, this));
    this.$editable.on('mouseup', $.proxy(this.onMouseup, this));

    this.$editable.on('keydown', $.proxy(this.onKeydown, this));
    this.$editable.on('keyup', $.proxy(this.onKeyup, this));

    this.$editable.on('click', $.proxy(this.onClick, this));
    this.$editable.on('dblclick', $.proxy(this.onDblclick, this));

    this.$editable.on('contextmenu', function (e) {
      e
